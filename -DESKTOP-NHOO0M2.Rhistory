runways <- st_crop(runways, bb)
airports <- st_crop(airports, bb)
plot(st_geometry(runways))
plot(st_geometry(airports), add = TRUE)
?st_write
st_write(runways, './Data/Spatial/Industry_GIS/NSSI/runways.shp')
st_write(airports, './Data/Spatial/Industry_GIS/NSSI/airports.shp')
st_write(runways, './Derived-data/Spatial/NSSI/runways.shp')
st_write(runways, './Data/Derived-data/Spatial/NSSI/runways.shp')
st_write(airports, './Data/Derived-data/Spatial/NSSI/airports.shp')
NSpipes <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSPiplines_V10.shp')
NSpipes <- st_read('C:\Users\akell\OneDrive - Colostate\PhD\Polar_Bears\Repos\Chapter2\Data\Spatial\Industry_GIS\North Slope Science\North_slope_infrastructure_roads_pipelines_developed_areas/NSPiplines_V10.shp')
NSpipes <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSPiplines_V10.shp')
NSpipes <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSPiplines_V10')
?SHAPE_RESTORE_CONFIG
NSpipes <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSPiplines_V10.shp')
NSpipes <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSPiplines_V10.shp')
NSRoads <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSRoads_V10.shp')
NSDev <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSDevAreas_V10.shp')
transak <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/trans_alaska_pipeline/trans_alaska_pipeline.shp')
transak <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/trans_alaska_pipeline/Transportation - Pipelines - Trans Alaska Pipeline System_LINE.shp')
NSpipes <- st_transform(NSpipes, 3338)
NSRoads <- st_transform(NSRoads, 3338)
NSDev <- st_transform(NSDev, 3338)
transak <- st_transform(transak, 3338)
cp <- list.files(path = './Data/Spatial/Industry_GIS/CP_Infrastructure', pattern = "[.]shp$", full.names = TRUE)
cp_shp <- list()
for(i in 1:length(cp)){
shp = st_read(cp[i])
shp = st_transform(shp, 3338)
cp_shp[[i]] = shp
}
cp2 <- bind_rows(cp_shp)
library(sf)
library(dplyr)
library(tidyr)
library(maps)
library(ggplot2)
library(googleway) # can pull geographic coords from Google
theme_set(theme_bw())
library(rnaturalearth)
library(rnaturalearthdata)
library(ggrepel)
cp <- list.files(path = './Data/Spatial/Industry_GIS/CP_Infrastructure', pattern = "[.]shp$", full.names = TRUE)
cp_shp <- list()
for(i in 1:length(cp)){
shp = st_read(cp[i])
shp = st_transform(shp, 3338)
cp_shp[[i]] = shp
}
cp2 <- bind_rows(cp_shp)
hil <- list.files(path = './Data/Spatial/Industry_GIS/Hilcorp', pattern = "[.]shp$", full.names = TRUE)
hil_shp <- list()
for(i in 1:length(hil)){
shp = st_read(hil[i])
shp = st_transform(shp, 3338)
hil_shp[[i]] = shp
}
hil2 <- bind_rows(hil_shp)
faa <- st_read('./Data/Derived-data/NS_pipes_roads.shp')
faa <- st_read('./Data/Derived-data/Spatial/NSSI/NS_pipes_roads.shp')
head(faa)
plot(st_geometry(faa))
airports <- st_read('./Data/Derived-data/Spatial/NSSI/airports.shp')
airports <- st_read('./Data/Derived-data/Spatial/NSSI/airports.shp')
runways <- st_read('./Data/Derived-data/Spatial/NSSI/runways.shp')
?st_union
head(airports)
head(runways)
?bind_rows
faa <- bind_rows(airports, runways)
plot(st_geometry(faa))
NSpipes <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSPiplines_V10.shp')
NSRoads <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSRoads_V10.shp')
head(NSPipes)
head(NSpipes)
head(NSRoads)
ns <- st_union(NSpipes, NSRoads) # Not including development areas - ask Todd whether these should be included
NSpipes$NAME <- "NA"
NSpipes$Route_Name <- "NA"
NSpipes$Unit_Name <- "NA"
ns <- bind_rows(NSpipes, NSRoads) # Not including development areas - ask Todd whether these should be included
ggplot(data = world) +
geom_sf() +
geom_sf(data = akcities) +
geom_text_repel(data= akcities, aes(x = lng, y = lat, label = city),
size = 2.5, fontface = "bold", nudge_y = c(-0.5, -0.5, 0.5)) + # package ggrepel = flexible approach to label placement
geom_sf(data = cp2, color = "red") +
geom_sf(data = hil2, color = "red") +
geom_sf(data = faa, color = "blue") +
geom_sf(data = ns, color = "green") +
coord_sf(xlim = c(-155, -141), ylim = c(69.5,70.8), expand = FALSE)
world <- ne_countries(scale = "medium", returnclass = "sf") # rnaturalearth package
ggplot(data = world) +
geom_sf() +
geom_sf(data = akcities) +
geom_text_repel(data= akcities, aes(x = lng, y = lat, label = city),
size = 2.5, fontface = "bold", nudge_y = c(-0.5, -0.5, 0.5)) + # package ggrepel = flexible approach to label placement
geom_sf(data = cp2, color = "red") +
geom_sf(data = hil2, color = "red") +
geom_sf(data = faa, color = "blue") +
geom_sf(data = ns, color = "green") +
coord_sf(xlim = c(-155, -141), ylim = c(69.5,70.8), expand = FALSE)
key <- "AIzaSyDSOPDGRNBNE-ZoLj4PM608-dpDrQ0VNgg" # Google API key
akcities <- data.frame(state= rep("Alaska", 3), city = c("Niuqsut", "Deadhorse", "Kaktovik"))
coords <- apply(akcities, 1, function(x){
google_geocode(address = paste(x["city"], x["state"], sep = ", "),
key = key)
})
akcities <- cbind(akcities, do.call(rbind, lapply(coords, geocode_coordinates)))
akcities <- st_as_sf(akcities, coords = c("lng", "lat"), remove = FALSE, # Convert to SF format
crs = 4326, agr = "constant")
cp2 <- st_as_sf(cp2, coords = c("longitude", "latitude"), # Needs to be in lat/long to be compatible with ggplot features
crs = 4326, agr = "constant")
hil2 <- st_as_sf(hil2, coords = c("longitude", "latitude"),
crs = 4326, agr = "constant")
faa <- st_as_sf(faa, coords = c("longitude", "latitude"),
crs = 4326, agr = "constant")
ns <- st_as_sf(ns, coords = c("longitude", "latitude"),
crs = 4326, agr = "constant")
ggplot(data = world) +
geom_sf() +
geom_sf(data = akcities) +
geom_text_repel(data= akcities, aes(x = lng, y = lat, label = city),
size = 2.5, fontface = "bold", nudge_y = c(-0.5, -0.5, 0.5)) + # package ggrepel = flexible approach to label placement
geom_sf(data = cp2, color = "red") +
geom_sf(data = hil2, color = "red") +
geom_sf(data = faa, color = "blue") +
geom_sf(data = ns, color = "green") +
coord_sf(xlim = c(-155, -141), ylim = c(69.5,70.8), expand = FALSE)
ggplot(data = world) +
geom_sf() +
geom_sf(data = akcities) +
geom_text_repel(data= akcities, aes(x = lng, y = lat, label = city),
size = 2.5, fontface = "bold", nudge_y = c(-0.25, -0.25, 0.25)) + # package ggrepel = flexible approach to label placement
geom_sf(data = cp2, color = "red") +
geom_sf(data = hil2, color = "red") +
geom_sf(data = faa, color = "blue") +
geom_sf(data = ns, color = "green") +
coord_sf(xlim = c(-152, -143), ylim = c(70.0,70.8), expand = FALSE)
sf_use_s2(FALSE) # Otherwise get errors; https://github.com/r-spatial/sf/issues/1856
ggplot(data = world) +
geom_sf() +
geom_sf(data = akcities) +
geom_text_repel(data= akcities, aes(x = lng, y = lat, label = city),
size = 2.5, fontface = "bold", nudge_y = c(-0.25, -0.25, 0.25)) + # package ggrepel = flexible approach to label placement
geom_sf(data = cp2, color = "red") +
geom_sf(data = hil2, color = "red") +
geom_sf(data = faa, color = "blue") +
geom_sf(data = ns, color = "green") +
coord_sf(xlim = c(-152, -143), ylim = c(70.0,70.8), expand = FALSE)
library(sf)
library(dplyr)
library(tidyr)
library(maps)
library(ggplot2)
library(googleway) # can pull geographic coords from Google
theme_set(theme_bw())
library(rnaturalearth)
library(rnaturalearthdata)
library(ggrepel)
cp <- list.files(path = './Data/Spatial/Industry_GIS/CP_Infrastructure', pattern = "[.]shp$", full.names = TRUE)
cp_shp <- list()
for(i in 1:length(cp)){
shp = st_read(cp[i])
shp = st_transform(shp, 3338)
cp_shp[[i]] = shp
}
cp2 <- bind_rows(cp_shp)
hil <- list.files(path = './Data/Spatial/Industry_GIS/Hilcorp', pattern = "[.]shp$", full.names = TRUE)
hil_shp <- list()
for(i in 1:length(hil)){
shp = st_read(hil[i])
shp = st_transform(shp, 3338)
hil_shp[[i]] = shp
}
hil2 <- bind_rows(hil_shp)
airports <- st_read('./Data/Derived-data/Spatial/NSSI/airports.shp')
runways <- st_read('./Data/Derived-data/Spatial/NSSI/runways.shp')
faa <- bind_rows(airports, runways)
NSpipes <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSPiplines_V10.shp')
NSRoads <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSRoads_V10.shp')
#NSDev <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSDevAreas_V10.shp')
NSpipes$NAME <- "NA"
NSpipes$Route_Name <- "NA"
NSpipes$Unit_Name <- "NA"
ns <- bind_rows(NSpipes, NSRoads)
transak <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/trans_alaska_pipeline/Transportation - Pipelines - Trans Alaska Pipeline System_LINE.shp')
sf_use_s2(FALSE) # Otherwise get errors; https://github.com/r-spatial/sf/issues/1856
world <- ne_countries(scale = "medium", returnclass = "sf") # rnaturalearth package
states <- st_as_sf(map("state", plot = FALSE, fill = TRUE))
# Get city coords from Google
key <- "AIzaSyDSOPDGRNBNE-ZoLj4PM608-dpDrQ0VNgg" # Google API key
akcities <- data.frame(state= rep("Alaska", 3), city = c("Niuqsut", "Deadhorse", "Kaktovik"))
coords <- apply(akcities, 1, function(x){
google_geocode(address = paste(x["city"], x["state"], sep = ", "),
key = key)
})
akcities <- cbind(akcities, do.call(rbind, lapply(coords, geocode_coordinates)))
akcities <- st_as_sf(akcities, coords = c("lng", "lat"), remove = FALSE, # Convert to SF format
crs = 4326, agr = "constant")
cp2 <- st_as_sf(cp2, coords = c("longitude", "latitude"), # Needs to be in lat/long to be compatible with ggplot features
crs = 4326, agr = "constant")
hil2 <- st_as_sf(hil2, coords = c("longitude", "latitude"),
crs = 4326, agr = "constant")
faa <- st_as_sf(faa, coords = c("longitude", "latitude"),
crs = 4326, agr = "constant")
ns <- st_as_sf(ns, coords = c("longitude", "latitude"),
crs = 4326, agr = "constant")
ggplot(data = world) +
geom_sf() +
geom_sf(data = akcities) +
geom_text_repel(data= akcities, aes(x = lng, y = lat, label = city),
size = 3.0, fontface = "bold", nudge_y = c(-0.25, -0.25, 0.25)) + # package ggrepel = flexible approach to label placement
geom_sf(data = cp2, color = "red") +
geom_sf(data = hil2, color = "red") +
geom_sf(data = faa, color = "blue") +
geom_sf(data = ns, color = "green") +
coord_sf(xlim = c(-152, -143), ylim = c(70.0,70.8), expand = FALSE)
library(tmap)
install.packages("tmap")
install.packages("tmaptools")
head(akcities)
tmap_mode('view')
tm_shape(akcities) +
tm_dots()
library(tmap)
library(tmaptools)
tm_shape(akcities) +
tm_dots()
tmap_mode('view')
tm_shape(akcities) +
tm_dots()
tm_shape(akcities) +
tm_dots() +
tm_shape(ns) +
tm_symbols()
View(ns)
st_crs(ns)
plot(st_geometry(ns))
View(ns)
uniue(ns$Unit_Name)
unique(ns$Unit_Name)
head(cp2)
unique(cp2$NAME)
oliktok <- filter(contains("OLIKTOK"))
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
head(cp2)
cp2 %>%
filter(str_detect(NAME, 'OLIKTOK'))
cp2 %>%
filter(str_detect(NAME, 'OLIKTOK')) %>%
ggplot()
oliktok <- cp2 %>%
filter(str_detect(NAME, 'OLIKTOK'))
ggplot(data = world) +
geom_sf() +
geom_sf(data = akcities) +
geom_text_repel(data= akcities, aes(x = lng, y = lat, label = city),
size = 3.0, fontface = "bold", nudge_y = c(-0.25, -0.25, 0.25)) + # package ggrepel = flexible approach to label placement
geom_sf(data = oliktok, color = "red")
ggplot(data = world) +
geom_sf() +
geom_sf(data = akcities) +
geom_text_repel(data= akcities, aes(x = lng, y = lat, label = city),
size = 3.0, fontface = "bold", nudge_y = c(-0.25, -0.25, 0.25)) + # package ggrepel = flexible approach to label placement
geom_sf(data = oliktok, color = "red") +
coord_sf(xlim = c(-152, -143), ylim = c(70.0,70.8), expand = FALSE)
View(oliktok)
View(faa)
cp2 %>%
filter(str_detect(NAME, 'ENI'))
ns %>%
filter(str_detect(NAME, 'ENI'))
head(ns)
ns %>%
filter(str_detect(Route_Name, 'ENI'))
head(ns)
head(NSpipes)
NSpipes <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSPiplines_V10.shp')
head(NSpipes)
head(NSRoads)
head(cp2)
head(hil2)
unique(hil2$OPERATOR)
hil2 %>%
filter(str_detect(NAME, 'ENI'))
head(NSRoads)
NSRoads %>%
filter(str_detect(NAME, 'Point'))
NSRoads %>%
filter(str_detect(NAME, 'Point T'))
ns %>%
filter(str_detect(NAME, 'thom'))
head(ns)
ns %>%
filter(str_detect(Route_Name, 'thom'))
head(cp2)
ice_roads <- st_read('./OIL/IceRoads/iceroad.shp')
ice_roads <- st_read('C:/Users/akell/Documents/ArcGIS/Polar_Bears_GIS/GIS_from_Todd/Industry_GIS')
iceroad <- st_read('C:/Users/akell/Documents/ArcGIS/GIS from Todd/Industry GIS/OIL/IceRoads/iceroad.shp')
iceroad <- st_read('C:/Users/akell/Documents/ArcGIS/GIS from Todd/Industry GIS/OIL/IceRoads/iceroad.shp')
plot(st_geometry(ice_roads))
iceroad <- st_read('C:/Users/akell/Documents/ArcGIS/GIS from Todd/Industry GIS/OIL/IceRoads/iceroad.shp')
plot(st_geometry(iceroad))
tmap_mode('view')
tm_shape(iceroad) +
tm_lines()
npra_icerd <- st_read('C:/Users/akell/Documents/ArcGIS/GIS from Todd/Industry GIS/OIL/IceRoads/npra_2000_2001.shp')
?gome_sf
?geom_sf
ggplot(data = world) +
geom_sf() +
geom_sf(data = akcities) +
geom_text_repel(data= akcities, aes(x = lng, y = lat, label = city),
size = 3.0, fontface = "bold", nudge_y = c(-0.25, -0.25, 0.25)) + # package ggrepel = flexible approach to label placement
geom_sf(data = cp2, color = "red") +
geom_sf(data = hil2, color = "red") +
geom_sf(data = faa, color = "blue") +
geom_sf(data = ns, color = "green") +
geom_sf(data = iceroad, color = "#C5E9F6", size = 2) +
geom_sf(data = npra_icerd, color = "#C5E9F6", size = 2) +
coord_sf(xlim = c(-152, -143), ylim = c(70.0,70.8), expand = FALSE)
iceroad <- st_as_sf(iceroad, coords = c("longitude", "latitude"), # Needs to be in lat/long to be compatible with ggplot features
crs = 4326, agr = "constant")
npra_icerd <- st_as_sf(npra_icerd, coords = c("longitude", "latitude"),
crs = 4326, agr = "constant")
ggplot(data = world) +
geom_sf() +
geom_sf(data = akcities) +
geom_text_repel(data= akcities, aes(x = lng, y = lat, label = city),
size = 3.0, fontface = "bold", nudge_y = c(-0.25, -0.25, 0.25)) + # package ggrepel = flexible approach to label placement
geom_sf(data = cp2, color = "red") +
geom_sf(data = hil2, color = "red") +
geom_sf(data = faa, color = "blue") +
geom_sf(data = ns, color = "green") +
geom_sf(data = iceroad, color = "#C5E9F6", size = 2) +
geom_sf(data = npra_icerd, color = "#C5E9F6", size = 2) +
coord_sf(xlim = c(-152, -143), ylim = c(70.0,70.8), expand = FALSE)
st_crs(iceroad)
iceroad <- st_as_sf(iceroad, coords = c("longitude", "latitude"), # Needs to be in lat/long to be compatible with ggplot features
crs = 4326, agr = "constant")
st_crs(iceroad)
head(iceroad)
iceroad <- st_read('C:/Users/akell/Documents/ArcGIS/GIS from Todd/Industry GIS/OIL/IceRoads/iceroad.shp') %>%
st_set_crs(4326)
st_crs(iceroad)
npra_icerd <- st_read('C:/Users/akell/Documents/ArcGIS/GIS from Todd/Industry GIS/OIL/IceRoads/npra_2000_2001.shp') %>%
st_set_crs(4326)
ggplot(data = world) +
geom_sf() +
geom_sf(data = akcities) +
geom_text_repel(data= akcities, aes(x = lng, y = lat, label = city),
size = 3.0, fontface = "bold", nudge_y = c(-0.25, -0.25, 0.25)) + # package ggrepel = flexible approach to label placement
geom_sf(data = cp2, color = "red") +
geom_sf(data = hil2, color = "red") +
geom_sf(data = faa, color = "blue") +
geom_sf(data = ns, color = "green") +
geom_sf(data = iceroad, color = "#C5E9F6", size = 2) +
geom_sf(data = npra_icerd, color = "#C5E9F6", size = 2) +
coord_sf(xlim = c(-152, -143), ylim = c(70.0,70.8), expand = FALSE)
ggplot(data = world) +
geom_sf() +
geom_sf(data = akcities) +
geom_text_repel(data= akcities, aes(x = lng, y = lat, label = city),
size = 3.0, fontface = "bold", nudge_y = c(-0.25, -0.25, 0.25)) + # package ggrepel = flexible approach to label placement
geom_sf(data = cp2, color = "red") +
geom_sf(data = hil2, color = "red") +
geom_sf(data = faa, color = "blue") +
geom_sf(data = ns, color = "green") +
geom_sf(data = iceroad, color = "#C5E9F6") +
geom_sf(data = npra_icerd, color = "#C5E9F6") +
coord_sf(xlim = c(-152, -143), ylim = c(70.0,70.8), expand = FALSE)
head(iceroad)
head(ns)
unique(ns$NAME)
st_write(ns, './Data/Derived-data/Spatial/NSSI/NS_pipes_roads.shp') # Takes a bit of time to combine
head(ns)
library(tidyverse)
library(sf)
gravel <- st_read('./Data/Spatial/Industry_GIS/CP_Infrastructure/Kuparuk_Gravel.shp')
gravel_pads <- st_read('./Data/Spatial/Industry_GIS/CP_Infrastructure//Kuparuk_Gravel_Pads.shp')
cpfac <- st_union(gravel, gravel_pads) %>% st_transform(3338)
hil_fac <- st_read('./Data/Spatial/Industry_GIS/Hilcorp/Facilities_Hilcorp.shp') %>%
st_transform(3338)
cpfac <- cpfac %>%
select(NAME, OPERATOR, Type, LABEL, geometry) %>%
rename(TYPE = Type)
head(cpfac)
cpfac$OPERATOR <- "CP"
cpfac <- cpfac %>%
select(NAME, OPERATOR, Type, LABEL, geometry) %>%
rename(TYPE = Type)
hil <- hil %>%
select(NAME, OPERATOR, TYPE, LABEL, geometry)
hil$TYPE <- as.character(hil$TYPE) # Change from integer to character in order to use bind_rows()
hil_fac <- hil_fac %>%
select(NAME, OPERATOR, TYPE, LABEL, geometry)
head(hil_fac)
head(cpfac)
cpfac <- cpfac %>%
select(NAME, OPERATOR, LABEL, geometry) %>%
rename(TYPE = Type)
hil_fac <- hil_fac %>%
select(NAME, OPERATOR, LABEL, geometry)
hil_fac <- st_read('./Data/Spatial/Industry_GIS/Hilcorp/Facilities_Hilcorp.shp') %>%
st_transform(3338)
head(hil_fac)
hil_fac <- hil_fac %>%
select(NAME, OPERATOR, geometry)
head(cpfac)
cpfac <- cpfac %>%
select(NAME, OPERATOR, geometry)
indfac <- bind_rows(cpfac, hil_fac)
nsfac <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSDevAreas_V10.shp')
nsfac <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSDevAreas_V10.shp') %>%
st_transform(3338)
interfac <- st_intersection(indfac, nsfac)
world <- ne_countries(scale = "medium", returnclass = "sf") # rnaturalearth package
states <- st_as_sf(map("state", plot = FALSE, fill = TRUE))
# Get city coords from Google
key <- "AIzaSyDSOPDGRNBNE-ZoLj4PM608-dpDrQ0VNgg" # Google API key
akcities <- data.frame(state= rep("Alaska", 3), city = c("Niuqsut", "Deadhorse", "Kaktovik"))
coords <- apply(akcities, 1, function(x){
google_geocode(address = paste(x["city"], x["state"], sep = ", "),
key = key)
})
library(maps)
library(googleway) # can pull geographic coords from Google
theme_set(theme_bw())
library(rnaturalearth)
library(rnaturalearthdata)
library(ggrepel)
world <- ne_countries(scale = "medium", returnclass = "sf") # rnaturalearth package
states <- st_as_sf(map("state", plot = FALSE, fill = TRUE))
# Get city coords from Google
key <- "AIzaSyDSOPDGRNBNE-ZoLj4PM608-dpDrQ0VNgg" # Google API key
akcities <- data.frame(state= rep("Alaska", 3), city = c("Niuqsut", "Deadhorse", "Kaktovik"))
coords <- apply(akcities, 1, function(x){
google_geocode(address = paste(x["city"], x["state"], sep = ", "),
key = key)
})
akcities <- cbind(akcities, do.call(rbind, lapply(coords, geocode_coordinates)))
akcities <- st_as_sf(akcities, coords = c("lng", "lat"), remove = FALSE, # Convert to SF format
crs = 4326, agr = "constant")
ggplot(data = world) +
geom_sf() +
geom_sf(data = akcities) +
geom_text_repel(data= akcities, aes(x = lng, y = lat, label = city),
size = 3.0, fontface = "bold", nudge_y = c(-0.25, -0.25, 0.25)) + # package ggrepel = flexible approach to label placement
geom_sf(data = interfac, color = "red") +
geom_sf(data = nsfac, color = "blue") +
coord_sf(xlim = c(-152, -143), ylim = c(70.0,70.8), expand = FALSE)
ggplot(data = world) +
geom_sf() +
geom_sf(data = akcities) +
geom_text_repel(data= akcities, aes(x = lng, y = lat, label = city),
size = 3.0, fontface = "bold", nudge_y = c(-0.25, -0.25, 0.25)) + # package ggrepel = flexible approach to label placement
geom_sf(data = interfac, fill = "red") +
geom_sf(data = nsfac, fill = "blue") +
coord_sf(xlim = c(-152, -143), ylim = c(70.0,70.8), expand = FALSE)
interfac <- st_intersection(indfac, nsfac)
plot(st_geometry(indfac), color = "red")
plot(st_geometry(nsfac), color = "blue", add = TRUE)
plot(st_geometry(indfac), col = "red")
plot(st_geometry(nsfac), col = "blue", add = TRUE)
plot(st_geometry(interfac), col = "red")
plot(st_geometry(nsfac), col = "blue", add = TRUE)
st_write(interfac, 'C:/Users/akell/Documents/ArcGIS/Projects/Chapter2/Energy/North Slope Science/Derived-data/inter_fac.shp')
library(tidyverse)
library(sf)
gravel <- st_read('./Data/Spatial/Industry_GIS/CP_Infrastructure/Kuparuk_Gravel.shp')
gravel_pads <- st_read('./Data/Spatial/Industry_GIS/CP_Infrastructure//Kuparuk_Gravel_Pads.shp')
cpfac <- st_union(gravel, gravel_pads) %>% st_transform(3338)
hil_fac <- st_read('./Data/Spatial/Industry_GIS/Hilcorp/Facilities_Hilcorp.shp') %>%
st_transform(3338)
nsfac <- st_read('./Data/Spatial/Industry_GIS/North Slope Science/North_slope_infrastructure_roads_pipelines_developed_areas/NSDevAreas_V10.shp') %>%
st_transform(3338)
rm(list = ls())
diffac <- st_read('./Data/Derived-data/Spatial/diff_fac.shp')
diffac <- st_read('./Data/Derived-data/Spatial/diff_fac.shp') %>%
st_transform(3338)
View(diffac)
head(diffac)
unique(diffac$AdminType)
unique(diffac$Type2)
residential <- filter(diffac, Type2 == "Townsite" | Type2 == "Homestead")
library(tmap)
library(tmaptools)
tmap_mode('view')
tm_shape(residential) +
tm_symbols()
ns_industrial <- filter(diffac, Type2 != "Townsite" | Type2 != "Homestead")
tm_shape(ns_industrial) +
tm_symbols()
View(ns_industrial)
ns_industrial <- diffac %>%
filter(!str_detect("Town") | !str_detect("Home"))
ns_industrial <- diffac %>%
filter(!str_detect(Type2, "Town") | !str_detect(Type2, "Home"))
ns_industrial <- diffac %>%
filter(!Type2 %in% c('Townsite', 'Homestead'))
View(ns_industrial)
st_write(residential, './Data/Derived-data/Spatial/NSSI/NSDev_residential.shp')
saveRDS(residential, './Data/Derived-data/Spatial/NSSI/NSDev_residential.Rds')
saveRDS(ns_industrial, './Data/Derived-data/Spatial/NSSI/NSDev_industrial.Rds')
rm(list = ls())
bt_pipe <- st_read('./Data/Spatial/Industry_GIS/CP_Infrastructure/Badami_Thomson_pipeline.shp')
haul_road <- st_read('./Data/Spatial/Industry_GIS/CP_Infrastructure/haul_road.shp')
rm(list = ls())
