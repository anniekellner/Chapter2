knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(lubridate)
library(ggplot2)
library(amt)
library(sf)
library(tmap)
library(tmaptools)
library(adehabitatLT)
# Bears
used <- readRDS('./Data/all_bonepile_points.Rds') # load all bonepile points
# Alaska
us <- st_read('./Data/Spatial/State_Shapefile/States_NAD83_Albers.shp') # From NPS state shapefile
bb <- st_read('C:/Users/akell/OneDrive - Colostate/PhD/Polar_Bears_GIS/Rectangle/Rectangle.shp')
bb <- st_transform(bb, 3338)
ak <- us %>%
filter(STATE_ABBR == "AK") %>%
st_transform(3338)
ak <- st_crop(ak, bb)
tmap_mode('view')
tm_shape(ak) +
tm_polygons(col = "#ABF37E") +
tm_shape(used) +
tm_symbols(size = 0.2, col = "id", legend.col.show = FALSE) +
#tm_shape(bone) +
#tm_symbols(size = 0.8, shape = 4, col = "black") +
tm_legend(show = FALSE)
source('./Code/MyFunctions.R')
# Convert sf object to dataframe
used <- cbind(used, st_coordinates(used)) # separate coords from geometry columns into X and Y columns
used.df <- used %>%
st_drop_geometry() %>%
as.data.frame()
table(used.df$id)
knitr::opts_chunk$set(echo = FALSE)
rm(list = ls())
library(dplyr)
library(lubridate)
library(ggplot2)
library(amt)
library(sf)
library(tmap)
library(tmaptools)
library(adehabitatLT)
# Bears
used <- readRDS('./Data/all_non_bonepile_pts.Rds') # load all non-bonepile points
#used.sf <- st_as_sf(used, coords = c('X',"Y"), crs = 3338) # sf object for plotting all points
# Alaska
us <- st_read('./Data/Spatial/State_Shapefile/States_NAD83_Albers.shp') # From NPS state shapefile
bb <- st_read('C:/Users/akell/OneDrive - Colostate/PhD/Polar_Bears_GIS/Rectangle/Rectangle.shp')
bb <- st_transform(bb, 3338)
ak <- us %>%
filter(STATE_ABBR == "AK") %>%
st_transform(3338)
ak <- st_crop(ak, bb)
# Bonepiles
bone <- st_read('./Data/Spatial/Bonepiles/bonepiles.shp')
source('./Code/MyFunctions.R')
# Convert sf object to dataframe
#used <- cbind(used, st_coordinates(used)) # separate coords from geometry columns into X and Y columns
used <- used %>%
st_drop_geometry() %>%
as.data.frame()
# Make track
track <- make_track(used, X, Y, datetime, id = id, crs = sp::CRS("+init=epsg:3338"))
